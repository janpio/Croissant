export const ccipReceiverSepoliaAbi = [
  {
    inputs: [
      { internalType: "address", name: "router", type: "address" },
      { internalType: "uint256", name: "_secret", type: "uint256" },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  { inputs: [{ internalType: "address", name: "router", type: "address" }], name: "InvalidRouter", type: "error" },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: "bytes32", name: "latestMessageId", type: "bytes32" },
      { indexed: false, internalType: "uint64", name: "latestSourceChainSelector", type: "uint64" },
      { indexed: false, internalType: "address", name: "latestSender", type: "address" },
      { indexed: false, internalType: "string", name: "latestMessage", type: "string" },
    ],
    name: "MessageReceived",
    type: "event",
  },
  {
    inputs: [{ internalType: "address", name: "_admin", type: "address" }],
    name: "addAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "", type: "address" }],
    name: "addressToUser",
    outputs: [
      { internalType: "string", name: "userAnswers", type: "string" },
      { internalType: "bool", name: "isCorrect", type: "bool" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          { internalType: "bytes32", name: "messageId", type: "bytes32" },
          { internalType: "uint64", name: "sourceChainSelector", type: "uint64" },
          { internalType: "bytes", name: "sender", type: "bytes" },
          { internalType: "bytes", name: "data", type: "bytes" },
          {
            components: [
              { internalType: "address", name: "token", type: "address" },
              { internalType: "uint256", name: "amount", type: "uint256" },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "destTokenAmounts",
            type: "tuple[]",
          },
        ],
        internalType: "struct Client.Any2EVMMessage",
        name: "message",
        type: "tuple",
      },
    ],
    name: "ccipReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "string[]", name: "_questions", type: "string[]" },
      { internalType: "string", name: "_answers", type: "string" },
    ],
    name: "createQuiz",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "_quizId", type: "uint256" }],
    name: "fetchQuestions",
    outputs: [{ internalType: "string[]", name: "", type: "string[]" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestMessageDetails",
    outputs: [
      { internalType: "bytes32", name: "", type: "bytes32" },
      { internalType: "uint64", name: "", type: "uint64" },
      { internalType: "address", name: "", type: "address" },
      { internalType: "string", name: "", type: "string" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    name: "idToQuiz",
    outputs: [{ internalType: "bytes32", name: "answers", type: "bytes32" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "", type: "address" }],
    name: "isAdmin",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestMessage",
    outputs: [{ internalType: "string", name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestSender",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "quizId",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "_quizId", type: "uint256" },
      { internalType: "string", name: "_userAnswers", type: "string" },
    ],
    name: "registerUserAnswers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "bytes4", name: "interfaceId", type: "bytes4" }],
    name: "supportsInterface",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "_quizId", type: "uint256" },
      { internalType: "string[]", name: "_questions", type: "string[]" },
      { internalType: "string", name: "_answers", type: "string" },
    ],
    name: "updateQuiz",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  { stateMutability: "payable", type: "receive" },
] as const;
